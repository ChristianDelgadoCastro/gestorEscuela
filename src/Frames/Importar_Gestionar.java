/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frames;

import Clases.Conectar;
import java.awt.Component;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import org.apache.commons.compress.utils.IOUtils;
import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.*;

/**
 *
 * @author Christian Delgado
 */
public class Importar_Gestionar extends javax.swing.JFrame {

    /**
     * Creates new form Importar_Gestionar
     */
    int xMouse, yMouse;

    public Importar_Gestionar() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        header = new javax.swing.JPanel();
        backBtn = new javax.swing.JPanel();
        backTxt = new javax.swing.JLabel();
        exitBtn = new javax.swing.JPanel();
        exitTxt = new javax.swing.JLabel();
        minimizeBtn = new javax.swing.JPanel();
        minimizeTxt = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnImportar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaContenidoExcel = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnCrearEjemplo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        header.setBackground(new java.awt.Color(255, 255, 255));
        header.setForeground(new java.awt.Color(255, 255, 255));
        header.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headerMouseDragged(evt);
            }
        });
        header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                headerMousePressed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(255, 255, 255));

        backTxt.setBackground(new java.awt.Color(255, 255, 255));
        backTxt.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        backTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backTxt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/backbtn.png"))); // NOI18N
        backTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backTxt.setPreferredSize(new java.awt.Dimension(40, 40));
        backTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout backBtnLayout = new javax.swing.GroupLayout(backBtn);
        backBtn.setLayout(backBtnLayout);
        backBtnLayout.setHorizontalGroup(
            backBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        backBtnLayout.setVerticalGroup(
            backBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backBtnLayout.createSequentialGroup()
                .addComponent(backTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        exitBtn.setBackground(new java.awt.Color(255, 255, 255));

        exitTxt.setBackground(new java.awt.Color(255, 255, 255));
        exitTxt.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        exitTxt.setForeground(new java.awt.Color(0, 0, 0));
        exitTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitTxt.setText("X");
        exitTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitTxt.setPreferredSize(new java.awt.Dimension(40, 40));
        exitTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout exitBtnLayout = new javax.swing.GroupLayout(exitBtn);
        exitBtn.setLayout(exitBtnLayout);
        exitBtnLayout.setHorizontalGroup(
            exitBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, exitBtnLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        exitBtnLayout.setVerticalGroup(
            exitBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, exitBtnLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(exitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        minimizeBtn.setBackground(new java.awt.Color(255, 255, 255));

        minimizeTxt.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        minimizeTxt.setForeground(new java.awt.Color(0, 0, 0));
        minimizeTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimizeTxt.setText("â€”");
        minimizeTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout minimizeBtnLayout = new javax.swing.GroupLayout(minimizeBtn);
        minimizeBtn.setLayout(minimizeBtnLayout);
        minimizeBtnLayout.setHorizontalGroup(
            minimizeBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
            .addGroup(minimizeBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, minimizeBtnLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(minimizeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        minimizeBtnLayout.setVerticalGroup(
            minimizeBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
            .addGroup(minimizeBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(minimizeBtnLayout.createSequentialGroup()
                    .addComponent(minimizeTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 636, Short.MAX_VALUE)
                .addComponent(minimizeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(exitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(minimizeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 760, 30));

        jLabel1.setFont(new java.awt.Font("Roboto Black", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Importar calificaciones");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 760, -1));

        btnImportar.setBackground(new java.awt.Color(153, 255, 255));
        btnImportar.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        btnImportar.setText("Seleccionar Archivo");
        btnImportar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarActionPerformed(evt);
            }
        });
        jPanel1.add(btnImportar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        btnGuardar.setBackground(new java.awt.Color(153, 255, 153));
        btnGuardar.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        btnGuardar.setText("Guardar en base de datos");
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, -1, -1));

        tablaContenidoExcel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "nControl", "Nombre", "Grupo", "nControlAsignatura", "Asignatura", "CalificaciÃ³n"
            }
        ));
        tablaContenidoExcel.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        tablaContenidoExcel.setSelectionBackground(new java.awt.Color(232, 57, 95));
        tablaContenidoExcel.setShowHorizontalLines(true);
        tablaContenidoExcel.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tablaContenidoExcel);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 680, 570));

        jLabel2.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jLabel2.setText("Nota: Si no aparece el nombre del alumno automaticamente, es posible que el nControl este mal, debes corregirlo y volvar a cargar el Excel");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 710, -1, -1));

        btnCrearEjemplo.setBackground(new java.awt.Color(255, 255, 153));
        btnCrearEjemplo.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        btnCrearEjemplo.setText("Descargar una pllantilla");
        btnCrearEjemplo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCrearEjemplo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearEjemploActionPerformed(evt);
            }
        });
        jPanel1.add(btnCrearEjemplo, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 90, 230, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 761, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backTxtMouseClicked
        Principal principal = new Principal();
        principal.setVisible(true);
        dispose();
    }//GEN-LAST:event_backTxtMouseClicked

    private void backTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backTxtMouseEntered
        backBtn.setBackground(Color.CYAN);
        backBtn.setForeground(Color.white);
    }//GEN-LAST:event_backTxtMouseEntered

    private void backTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backTxtMouseExited
        backBtn.setBackground(Color.white);
        backBtn.setForeground(Color.black);
    }//GEN-LAST:event_backTxtMouseExited

    private void exitTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTxtMouseClicked
        int option = JOptionPane.showConfirmDialog(null, "Â¿EstÃ¡s seguro de cerrar el sistema?", "Confirmar salida", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitTxtMouseClicked

    private void exitTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTxtMouseEntered
        exitBtn.setBackground(Color.red);
        exitTxt.setForeground(Color.white);
    }//GEN-LAST:event_exitTxtMouseEntered

    private void exitTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTxtMouseExited
        exitBtn.setBackground(Color.white);
        exitTxt.setForeground(Color.black);
    }//GEN-LAST:event_exitTxtMouseExited

    private void headerMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_headerMouseDragged

    private void headerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_headerMousePressed

    private void btnImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Seleccionar archivo Excel");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos Excel (*.xls, *.xlsx)", "xls", "xlsx");
        fileChooser.setFileFilter(filter);

        int seleccion = fileChooser.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();

            try ( FileInputStream fis = new FileInputStream(file);  Workbook workbook = WorkbookFactory.create(fis)) {

                Sheet sheet = workbook.getSheetAt(0); // Obtener la primera hoja del libro (puedes ajustarlo segÃºn tus necesidades)
                Iterator<Row> rowIterator = sheet.iterator();

                DefaultTableModel model = (DefaultTableModel) tablaContenidoExcel.getModel();
                model.setRowCount(0); // Limpiar la tabla antes de cargar nuevos datos

                while (rowIterator.hasNext()) {
                    Row row = rowIterator.next();
                    Object[] rowData = new Object[6]; // Array para almacenar los datos de cada fila del archivo Excel

                    // Leer los valores de las celdas y asignarlos al array rowData
                    Cell nControlCell = row.getCell(0);
                    nControlCell.setCellType(CellType.STRING); // Convertir la celda a formato de texto
                    rowData[0] = nControlCell.getStringCellValue();

                    Cell grupoCell = row.getCell(1);
                    rowData[2] = grupoCell.getCellType() == CellType.STRING ? grupoCell.getStringCellValue() : "";

                    Cell nControlAsignaturaCell = row.getCell(2);
                    rowData[3] = nControlAsignaturaCell.getCellType() == CellType.STRING ? nControlAsignaturaCell.getStringCellValue() : "";

                    Cell calificacionCell = row.getCell(3);
                    rowData[5] = calificacionCell.getCellType() == CellType.NUMERIC ? calificacionCell.getNumericCellValue() : 0;

                    // Obtener el nombre del alumno
                    String nControl = rowData[0].toString();
                    String nombreAlumno = obtenerNombreAlumno(nControl); // AquÃ­ debes reemplazar obtenerNombreAlumno con el mÃ©todo adecuado para obtener el nombre del alumno segÃºn el nControl

                    // Obtener el nombre de la asignatura
                    String nControlAsignatura = rowData[3].toString();
                    String asignatura = obtenerNombreAsignatura(nControlAsignatura); // AquÃ­ debes reemplazar obtenerNombreAsignatura con el mÃ©todo adecuado para obtener el nombre de la asignatura segÃºn el nControlAsignatura

                    rowData[1] = nombreAlumno;
                    rowData[4] = asignatura;

                    model.addRow(rowData); // Agregar la fila a la tabla
                }
            } catch (IOException | EncryptedDocumentException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error al leer el archivo Excel.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnImportarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        int rowCount = tablaContenidoExcel.getRowCount();

        String sqlBuscarAlumno = "SELECT * FROM dbo.alumnos WHERE ncontrol = ?";
        String sqlActualizarCalificacion = "UPDATE dbo.calificaciones SET calificacion = ? WHERE ncontrol = ? AND grupo = ? AND nControlAsignatura = ?";

        try {
            DefaultTableModel tableModel = (DefaultTableModel) tablaContenidoExcel.getModel();
            tableModel.fireTableDataChanged(); // Actualizar el modelo de datos antes de la iteraciÃ³n

            PreparedStatement pstBuscarAlumno = cn.prepareStatement(sqlBuscarAlumno);
            PreparedStatement pstActualizarCalificacion = cn.prepareStatement(sqlActualizarCalificacion);

            for (int i = 0; i < rowCount; i++) {
                String nControl = tablaContenidoExcel.getValueAt(i, 0).toString();
                String grupo = tablaContenidoExcel.getValueAt(i, 2).toString();
                String nControlAsignatura = tablaContenidoExcel.getValueAt(i, 3).toString();
                double calificacion = Double.parseDouble(tablaContenidoExcel.getValueAt(i, 5).toString());

                pstBuscarAlumno.setString(1, nControl);
                ResultSet rs = pstBuscarAlumno.executeQuery();

                if (rs.next()) {
                    pstActualizarCalificacion.setDouble(1, calificacion);
                    pstActualizarCalificacion.setString(2, nControl);
                    pstActualizarCalificacion.setString(3, grupo);
                    pstActualizarCalificacion.setString(4, nControlAsignatura);

                    pstActualizarCalificacion.executeUpdate();
                } else {
                    JOptionPane.showMessageDialog(null, "No se encontrÃ³ el alumno con el nÃºmero de control: " + nControl);
                }
            }

            JOptionPane.showMessageDialog(null, "Registros actualizados exitosamente.");

        } catch (SQLException | NumberFormatException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al actualizar los registros. Contacta al administrador.");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCrearEjemploActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearEjemploActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar archivo Excel");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos Excel (*.xlsx)", "xlsx");
        fileChooser.setFileFilter(filter);
        fileChooser.setSelectedFile(new File("Plantilla de EvaluaciÃ³n.xlsx")); // Establecer el nombre de archivo por defecto

        int seleccion = fileChooser.showSaveDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            if (!file.getName().endsWith(".xlsx")) { // Verificar la extensiÃ³n del archivo seleccionado
                file = new File(file.getAbsolutePath() + ".xlsx"); // AÃ±adir la extensiÃ³n .xlsx si no estÃ¡ presente
            }

            try ( Workbook workbook = new XSSFWorkbook()) {
                Sheet sheet = workbook.createSheet("Plantilla de EvaluaciÃ³n");

                // Crear los datos a insertar en el archivo Excel
                Object[][] data = {
                    {"111111", "DG015", "AM546", 10},
                    {"222222", "DG015", "AM546", 10},
                    {"555555", "DG015", "AM546", 10}
                };

                // Insertar los datos en el archivo Excel
                int rowCount = 0;
                for (Object[] row : data) {
                    Row excelRow = sheet.createRow(rowCount++);
                    int columnCount = 0;
                    for (Object field : row) {
                        Cell cell = excelRow.createCell(columnCount++);
                        if (field instanceof String) {
                            cell.setCellValue((String) field);
                        } else if (field instanceof Integer) {
                            cell.setCellValue((Integer) field);
                        }
                    }
                }
                CellRangeAddress region = new CellRangeAddress(2, 5, 6, 12);
                sheet.addMergedRegion(region);

                Row noteRow = sheet.createRow(2);
                Cell noteCell = noteRow.createCell(6);
                noteCell.setCellValue("Nota: no agregar nombre a las columnas y solo reemplazar los datos que vienen de ejemplo, "
                        + "tampoco cambiar el tipo de datos, todos deben llevar el formato \"General\". El orden debe de ser el siguiente: "
                        + "Numero de control | Grupo | Numero de control de asignatura | Calificacion |");

                CellStyle noteCellStyle = workbook.createCellStyle();
                Font noteFont = workbook.createFont();
                noteFont.setBold(true);
                noteCellStyle.setFont(noteFont);
                noteCellStyle.setWrapText(true);
                noteCell.setCellStyle(noteCellStyle);

                // Guardar el archivo Excel
                try ( FileOutputStream fos = new FileOutputStream(file)) {
                    workbook.write(fos);
                    JOptionPane.showMessageDialog(this, "Archivo Excel creado exitosamente.");
                } catch (IOException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Error al guardar el archivo Excel.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error al crear el archivo Excel.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnCrearEjemploActionPerformed

    private void minimizeTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeTxtMouseClicked
        setState(Login.ICONIFIED);
    }//GEN-LAST:event_minimizeTxtMouseClicked

    private void minimizeTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeTxtMouseEntered
        minimizeBtn.setBackground(Color.GRAY);
        minimizeTxt.setForeground(Color.white);
    }//GEN-LAST:event_minimizeTxtMouseEntered

    private void minimizeTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeTxtMouseExited
        minimizeBtn.setBackground(Color.white);
        minimizeTxt.setForeground(Color.black);
    }//GEN-LAST:event_minimizeTxtMouseExited

    // MÃ©todo para obtener el nombre del alumno segÃºn el nControl
    private String obtenerNombreAlumno(String nControl) {
        String nombreAlumno = "";
        String sql = "SELECT nombre FROM dbo.alumnos WHERE ncontrol = ?";

        try {
            PreparedStatement pst = cn.prepareStatement(sql);
            pst.setString(1, nControl);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                nombreAlumno = rs.getString("nombre");
            }
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al obtener el nombre del alumno. Contacta al administrador.");
        }

        return nombreAlumno;
    }

// MÃ©todo para obtener el nombre de la asignatura segÃºn el nControlAsignatura
    private String obtenerNombreAsignatura(String nControlAsignatura) {
        String asignatura = "";
        String sql = "SELECT asignatura FROM dbo.asignaturas WHERE nControlAsignatura = ?";

        try {
            PreparedStatement pst = cn.prepareStatement(sql);
            pst.setString(1, nControlAsignatura);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                asignatura = rs.getString("asignatura");
            }
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al obtener el nombre de la asignatura. Contacta al administrador.");
        }

        return asignatura;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Importar_Gestionar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Importar_Gestionar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Importar_Gestionar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Importar_Gestionar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Importar_Gestionar().setVisible(true);

            }
        });
    }

    Conectar con = new Conectar();
    Connection cn = con.conexion();


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backBtn;
    private javax.swing.JLabel backTxt;
    private javax.swing.JButton btnCrearEjemplo;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnImportar;
    private javax.swing.JPanel exitBtn;
    private javax.swing.JLabel exitTxt;
    private javax.swing.JPanel header;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel minimizeBtn;
    private javax.swing.JLabel minimizeTxt;
    private javax.swing.JTable tablaContenidoExcel;
    // End of variables declaration//GEN-END:variables
}
