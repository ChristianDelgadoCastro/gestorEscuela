/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frames;

import Clases.Conectar;
import java.awt.FlowLayout;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author Christian Delgado
 */
public class AdministracionGrupos extends javax.swing.JFrame {

    private String campoEspecialidad1;
    private String campoGrupo;

    /**
     * Creates new form AdministracionGrupos
     */
    public AdministracionGrupos(String grupo, String especialidad) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.campoEspecialidad1 = especialidad;
        this.campoGrupo = grupo;

        txtGrupo.setText(grupo);
        txtEspecialidad.setText(especialidad);
        cerrar();
        mostrarTabla();
    }

    // Resto del código del formulario y otros métodos...
    private AdministracionGrupos() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAlumnosGrupo = new javax.swing.JTable();
        btnVolver = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtGrupo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtEspecialidad = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaAlumnosGrupo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaAlumnosGrupo);

        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/back_icon.png"))); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setText("Especialidad");

        txtGrupo.setText("jLabel2");

        jLabel3.setText("Nombre del grupo:");

        txtEspecialidad.setText("jLabel4");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEspecialidad, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                    .addComponent(txtGrupo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGrupo)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEspecialidad)
                    .addComponent(jLabel1))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVolver))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public class SoundPlayer {

        public static void playSystemNotificationSound() {
            Toolkit.getDefaultToolkit().beep();

        }
    }


    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed

        Registrar_Grupos registrar_grupos = new Registrar_Grupos();
        registrar_grupos.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

//    private String obtenerNumControlAlumno(String nombreAlumno, String apellidosAlumno, String numControlAsignatura, String numControlGrupo) {
//        String numControlAlumno = null;
//
//        try {
//            String sql = "SELECT numControlAlumno FROM alumnos_grupo WHERE nombreAlumno = ? AND apellidosAlumno = ? AND numControlAsignatura = ? AND numControlGrupo = ?";
//            PreparedStatement statement = cn.prepareStatement(sql);
//            statement.setString(1, nombreAlumno);
//            statement.setString(2, apellidosAlumno);
//            statement.setString(3, numControlAsignatura);
//            statement.setString(4, numControlGrupo);
//            ResultSet rs = statement.executeQuery();
//
//            if (rs.next()) {
//                numControlAlumno = rs.getString("numControlAlumno");
//            }
//
//            rs.close();
//            statement.close();
//        } catch (SQLException ex) {
//            ex.printStackTrace();
//        }
//
//        return numControlAlumno;
//    }
//
//    private String obtenerNumControlAlumnoTabla(int fila) {
//        String numControlGrupo = tablaAlumnosGrupo.getValueAt(fila, 0).toString();
//        String nombreAlumno = tablaAlumnosGrupo.getValueAt(fila, 1).toString();
//        String apellidosAlumno = tablaAlumnosGrupo.getValueAt(fila, 2).toString();
//        String numControlAsignatura = tablaAlumnosGrupo.getValueAt(fila, 3).toString();
//
//        String numControlAlumno = obtenerNumControlAlumno(nombreAlumno, apellidosAlumno, numControlAsignatura, numControlGrupo);
//
//        return numControlAlumno;
//    }
//
//    private String obtenerCalificacionAnterior(String numControlAlumno, String numControlGrupo) {
//        String calificacionAnterior = "";
//
//        try {
//            String sql = "SELECT calificaciones FROM alumnos_grupo WHERE numControlAlumno = ? AND numControlGrupo = ?";
//            PreparedStatement statement = cn.prepareStatement(sql);
//            statement.setString(1, numControlAlumno);
//            statement.setString(2, numControlGrupo);
//            ResultSet rs = statement.executeQuery();
//
//            if (rs.next()) {
//                calificacionAnterior = rs.getString("calificaciones");
//                if (calificacionAnterior == null) {
//                    calificacionAnterior = "sin asignar";
//                } else if (calificacionAnterior.isEmpty()) {
//                    calificacionAnterior = "sin asignar";
//                }
//            }
//
//            rs.close();
//            statement.close();
//        } catch (SQLException ex) {
//            ex.printStackTrace();
//        }
//
//        return calificacionAnterior;
//    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdministracionGrupos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdministracionGrupos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdministracionGrupos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdministracionGrupos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdministracionGrupos().setVisible(true);
            }
        });
    }

    public void cerrarConexion(Connection conn) {
        if (conn != null) {
            try {
                // Cerrar la conexión
                conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    void mostrarTabla() {
        // Crear un DefaultTableModel personalizado
        DefaultTableModel modelo = new DefaultTableModel();

        modelo.addColumn("nControl");
        modelo.addColumn("Nombre");

        tablaAlumnosGrupo.setModel(modelo);

        String sql = "SELECT ncontrol, nombre FROM dbo.alumnos WHERE grupo = ? AND estatus = 'ac'";

        try {
            PreparedStatement statement = cn.prepareStatement(sql);

            // Obtener el valor del grupo del JLabel txtGrupo
            String grupo = txtGrupo.getText();

            // Establecer el valor del parámetro grupo en la consulta
            statement.setString(1, grupo);

            ResultSet rs = statement.executeQuery();

            while (rs.next()) {
                String nControl = rs.getString("ncontrol");
                String nombre = rs.getString("nombre");

                modelo.addRow(new Object[]{nControl, nombre});
            }
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al cargar datos, contacte al administrador");
        }

        // Ajustar automáticamente el tamaño de las columnas según el contenido
        tablaAlumnosGrupo.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tablaAlumnosGrupo.getColumnModel().getColumn(0).setPreferredWidth(100); // Ajustar el ancho de la primera columna si es necesario
        tablaAlumnosGrupo.getColumnModel().getColumn(1).setPreferredWidth(250); // Ajustar el ancho de la columna de nombre si es necesario

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        tablaAlumnosGrupo.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
    }

    public void cerrar() {

        try {
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {

                public void windowClosing(WindowEvent e) {

                    confirmarSalida();

                }

            });

        } catch (Exception e) {
        }
    }

    public void confirmarSalida() {
        SoundPlayer.playSystemNotificationSound();
        int valor = JOptionPane.showConfirmDialog(this, "¿Deseas cerrar la aplicacion?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (valor == JOptionPane.YES_OPTION) {

            JOptionPane.showMessageDialog(null, "Hasta pronto", "", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);

        }

    }

    Conectar con = new Conectar();
    Connection cn = con.conexion();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaAlumnosGrupo;
    private javax.swing.JLabel txtEspecialidad;
    private javax.swing.JLabel txtGrupo;
    // End of variables declaration//GEN-END:variables
}
