/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Clases.Conectar;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import org.w3c.dom.css.RGBColor;

/**
 *
 * @author Christian Delgado
 */


public class Registrar_Grupos extends javax.swing.JFrame {

    /**
     * Creates new form Registrar_curso
     */
    
    int xMouse, yMouse;
    
    public Registrar_Grupos() {
        initComponents();
//        TextPrompt nombre_curso = new TextPrompt("Escribe curso", txtNombre);

        
        this.setLocationRelativeTo(null);
        // Llamar al método de mostrar grupos activos al inicio
        mostrarGruposActivos();
// Establecer la selección predeterminada en el comboBox
//        establecerSeleccionPredeterminada();
//        limpiar();
//        txtNumControlGrupo.setEnabled(true);
        cerrar();
//        txtIDGrupo.setEnabled(false);
//
//        cargarAsignaturas();

        // Remover todos los elementos existentes del comboBox
        cmb1.removeAllItems();
        cmb1.addItem("Mostrar todos");
        cmb1.addItem("Especialidad");
        cmb1.addItem("Turno");
        cmb1.addItem("Horario");
    }

    // Método para cargar las opciones de especialidad en cmb2
    private void cargarOpcionesEspecialidad() {
        cmb2.removeAllItems(); // Limpiar las opciones anteriores

        String sql = "SELECT DISTINCT especialidad FROM dbo.grupos";

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                String especialidad = rs.getString("especialidad");
                cmb2.addItem(especialidad); // Agregar cada especialidad al ComboBox
            }
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al cargar opciones de especialidad, contacte al administrador");
        }
    }

// Método para cargar las opciones de turno en cmb2
    private void cargarOpcionesTurno() {
        cmb2.removeAllItems(); // Limpiar las opciones anteriores

        String sql = "SELECT DISTINCT turno FROM dbo.grupos";

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                String turno = rs.getString("turno");
                cmb2.addItem(turno); // Agregar cada turno al ComboBox
            }
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al cargar opciones de turno, contacte al administrador");
        }
    }

    // Método para cargar las opciones de turno en cmb2
    private void cargarOpcionesHorario() {
        cmb2.removeAllItems(); // Limpiar las opciones anteriores

        String sql = "SELECT DISTINCT horario FROM dbo.grupos";

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                String turno = rs.getString("horario");
                cmb2.addItem(turno); // Agregar cada turno al ComboBox
            }
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al cargar opciones de horario, contacte al administrador");
        }
    }

    public void cerrar() {

        try {
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {

                public void windowClosing(WindowEvent e) {

                    confirmarSalida();

                }

            });

        } catch (Exception e) {
        }
    }

    public void confirmarSalida() {

        int valor = JOptionPane.showConfirmDialog(this, "¿Deseas cerrar la aplicacion?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (valor == JOptionPane.YES_OPTION) {

            JOptionPane.showMessageDialog(null, "Hasta pronto", "", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popBorrar = new javax.swing.JPopupMenu();
        popEliminar = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_registro_grupos = new javax.swing.JTable();
        btnAdminGrupos = new javax.swing.JButton();
        header = new javax.swing.JPanel();
        backBtn = new javax.swing.JPanel();
        backTxt = new javax.swing.JLabel();
        exitBtn = new javax.swing.JPanel();
        exitTxt = new javax.swing.JLabel();
        minimizeBtn2 = new javax.swing.JPanel();
        minimizeTxt2 = new javax.swing.JLabel();
        cmb1 = new javax.swing.JComboBox<>();
        cmb2 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtEspecialidad = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtGrupo = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        popEliminar.setText("Borrar");
        popEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popEliminarActionPerformed(evt);
            }
        });
        popBorrar.add(popEliminar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Roboto Black", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Control de las grupos");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 790, -1));

        tabla_registro_grupos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla_registro_grupos.setComponentPopupMenu(popBorrar);
        tabla_registro_grupos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tabla_registro_grupos.setGridColor(new java.awt.Color(0, 0, 0));
        tabla_registro_grupos.setSelectionBackground(new java.awt.Color(232, 57, 95));
        tabla_registro_grupos.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tabla_registro_grupos.setShowHorizontalLines(true);
        tabla_registro_grupos.getTableHeader().setResizingAllowed(false);
        tabla_registro_grupos.getTableHeader().setReorderingAllowed(false);
        tabla_registro_grupos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_registro_gruposMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_registro_grupos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, 437, 340));

        btnAdminGrupos.setBackground(new java.awt.Color(153, 255, 255));
        btnAdminGrupos.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        btnAdminGrupos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/admi.png"))); // NOI18N
        btnAdminGrupos.setText("Administrar grupo!");
        btnAdminGrupos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdminGrupos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAdminGruposMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAdminGruposMouseExited(evt);
            }
        });
        btnAdminGrupos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminGruposActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdminGrupos, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, -1, 54));

        header.setBackground(new java.awt.Color(255, 255, 255));
        header.setForeground(new java.awt.Color(255, 255, 255));
        header.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headerMouseDragged(evt);
            }
        });
        header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                headerMousePressed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(255, 255, 255));

        backTxt.setBackground(new java.awt.Color(255, 255, 255));
        backTxt.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        backTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backTxt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/backbtn.png"))); // NOI18N
        backTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backTxt.setPreferredSize(new java.awt.Dimension(40, 40));
        backTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout backBtnLayout = new javax.swing.GroupLayout(backBtn);
        backBtn.setLayout(backBtnLayout);
        backBtnLayout.setHorizontalGroup(
            backBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        backBtnLayout.setVerticalGroup(
            backBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backBtnLayout.createSequentialGroup()
                .addComponent(backTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        exitBtn.setBackground(new java.awt.Color(255, 255, 255));

        exitTxt.setBackground(new java.awt.Color(255, 255, 255));
        exitTxt.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        exitTxt.setForeground(new java.awt.Color(0, 0, 0));
        exitTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitTxt.setText("X");
        exitTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitTxt.setPreferredSize(new java.awt.Dimension(40, 40));
        exitTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout exitBtnLayout = new javax.swing.GroupLayout(exitBtn);
        exitBtn.setLayout(exitBtnLayout);
        exitBtnLayout.setHorizontalGroup(
            exitBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exitTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
        );
        exitBtnLayout.setVerticalGroup(
            exitBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exitBtnLayout.createSequentialGroup()
                .addComponent(exitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        minimizeBtn2.setBackground(new java.awt.Color(255, 255, 255));

        minimizeTxt2.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        minimizeTxt2.setForeground(new java.awt.Color(0, 0, 0));
        minimizeTxt2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimizeTxt2.setText("—");
        minimizeTxt2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeTxt2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeTxt2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeTxt2MouseExited(evt);
            }
        });

        javax.swing.GroupLayout minimizeBtn2Layout = new javax.swing.GroupLayout(minimizeBtn2);
        minimizeBtn2.setLayout(minimizeBtn2Layout);
        minimizeBtn2Layout.setHorizontalGroup(
            minimizeBtn2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(minimizeTxt2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
        );
        minimizeBtn2Layout.setVerticalGroup(
            minimizeBtn2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(minimizeBtn2Layout.createSequentialGroup()
                .addComponent(minimizeTxt2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 667, Short.MAX_VALUE)
                .addComponent(minimizeBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(exitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(minimizeBtn2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 30));

        cmb1.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        cmb1.setMaximumRowCount(30);
        cmb1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmb1.setBorder(null);
        cmb1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb1ActionPerformed(evt);
            }
        });
        jPanel1.add(cmb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 180, -1));

        cmb2.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        cmb2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmb2.setBorder(null);
        cmb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb2ActionPerformed(evt);
            }
        });
        jPanel1.add(cmb2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 180, -1));

        jLabel3.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jLabel3.setText("Especialidad:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        txtEspecialidad.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtEspecialidad.setBorder(null);
        txtEspecialidad.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtEspecialidad.setEnabled(false);
        jPanel1.add(txtEspecialidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 250, 40));

        jLabel2.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        jLabel2.setText("Grupo:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        txtGrupo.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtGrupo.setBorder(null);
        txtGrupo.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        txtGrupo.setEnabled(false);
        jPanel1.add(txtGrupo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 250, 30));

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 250, 10));

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 250, 10));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabla_registro_gruposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_registro_gruposMouseClicked
        int filaSeleccionada = tabla_registro_grupos.getSelectedRow();
        if (filaSeleccionada != -1) {
            String grupo = tabla_registro_grupos.getValueAt(filaSeleccionada, 0).toString();
            String especialidad = tabla_registro_grupos.getValueAt(filaSeleccionada, 1).toString();

            txtGrupo.setText(grupo);
            txtEspecialidad.setText(especialidad);
        }
    }//GEN-LAST:event_tabla_registro_gruposMouseClicked

    private void popEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popEliminarActionPerformed

    }//GEN-LAST:event_popEliminarActionPerformed


    private void btnAdminGruposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminGruposActionPerformed

        int filaSeleccionada = tabla_registro_grupos.getSelectedRow();
        if (filaSeleccionada == -1) {
            AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ningún grupo. Por favor, seleccione uno.");
        } else {
            String grupo = (String) tabla_registro_grupos.getValueAt(filaSeleccionada, 0);
            String especialidad = (String) tabla_registro_grupos.getValueAt(filaSeleccionada, 1);

            AdministracionGrupos administracionGrupos = new AdministracionGrupos(grupo, especialidad);
            administracionGrupos.setVisible(true);
            dispose();
        }

    }//GEN-LAST:event_btnAdminGruposActionPerformed

    private void cmb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb1ActionPerformed
        Object selectedItem = cmb1.getSelectedItem();

        if (selectedItem != null) {
            String filtroSeleccionado = selectedItem.toString();

            if (filtroSeleccionado.equals("Mostrar todos")) {
                cmb2.setEnabled(false); // Deshabilitar cmb2
                mostrarGruposActivos(); // Mostrar todos los grupos sin filtros
            } else if (filtroSeleccionado.equals("Especialidad")) {
                cargarOpcionesEspecialidad(); // Cargar opciones de especialidad en cmb2
                cmb2.setEnabled(true); // Habilitar cmb2
            } else if (filtroSeleccionado.equals("Turno")) {
                cargarOpcionesTurno(); // Cargar opciones de turno en cmb2
                cmb2.setEnabled(true); // Habilitar cmb2
            } else if (filtroSeleccionado.equals("Horario")) {
                cargarOpcionesHorario(); // Cargar opciones de horario en cmb2
                cmb2.setEnabled(true); // Habilitar cmb2
            } else {
                // Realizar otras acciones según el filtro seleccionado
                cmb2.setEnabled(true); // Habilitar cmb2 si no es "Mostrar todos"
            }
        }
    }//GEN-LAST:event_cmb1ActionPerformed

    private void cmb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb2ActionPerformed
        mostrarGruposActivos();
    }//GEN-LAST:event_cmb2ActionPerformed

    private void backTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backTxtMouseClicked
        Principal principal = new Principal();
        principal.setVisible(true);
        dispose();
    }//GEN-LAST:event_backTxtMouseClicked

    private void backTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backTxtMouseEntered
        backBtn.setBackground(Color.CYAN);
        backBtn.setForeground(Color.white);
    }//GEN-LAST:event_backTxtMouseEntered

    private void backTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backTxtMouseExited
        backBtn.setBackground(Color.white);
        backBtn.setForeground(Color.black);
    }//GEN-LAST:event_backTxtMouseExited

    private void exitTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTxtMouseClicked
        int option = JOptionPane.showConfirmDialog(null, "¿Estás seguro de cerrar el sistema?", "Confirmar salida", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitTxtMouseClicked

    private void exitTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTxtMouseEntered
        exitBtn.setBackground(Color.red);
        exitTxt.setForeground(Color.white);
    }//GEN-LAST:event_exitTxtMouseEntered

    private void exitTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTxtMouseExited
        exitBtn.setBackground(Color.white);
        exitTxt.setForeground(Color.black);
    }//GEN-LAST:event_exitTxtMouseExited

    private void headerMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_headerMouseDragged

    private void headerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_headerMousePressed

    private void btnAdminGruposMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdminGruposMouseEntered
       btnAdminGrupos.setBackground(new Color(117, 193, 255));
       
    }//GEN-LAST:event_btnAdminGruposMouseEntered

    private void btnAdminGruposMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdminGruposMouseExited
        btnAdminGrupos.setBackground(new Color(153,255,255));
    }//GEN-LAST:event_btnAdminGruposMouseExited

    private void minimizeTxt2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeTxt2MouseClicked
        setState(Login.ICONIFIED);
    }//GEN-LAST:event_minimizeTxt2MouseClicked

    private void minimizeTxt2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeTxt2MouseEntered
        minimizeBtn2.setBackground(Color.GRAY);
        minimizeTxt2.setForeground(Color.white);
    }//GEN-LAST:event_minimizeTxt2MouseEntered

    private void minimizeTxt2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeTxt2MouseExited
        minimizeBtn2.setBackground(Color.white);
        minimizeTxt2.setForeground(Color.black);
    }//GEN-LAST:event_minimizeTxt2MouseExited

// Método para mostrar los grupos activos en la tabla
    private void mostrarGruposActivos() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Grupo");
        modelo.addColumn("Especialidad");
        modelo.addColumn("Horario");
        modelo.addColumn("Turno");

        tabla_registro_grupos.setModel(modelo);
        tabla_registro_grupos.setModel(modelo);
        tabla_registro_grupos.getTableHeader().setFont(new Font("Roboto", Font.BOLD, 15));
        tabla_registro_grupos.getTableHeader().setOpaque(false);
        tabla_registro_grupos.getTableHeader().setBackground(new Color(32, 136, 203));

        String filtro = cmb1.getSelectedItem() != null ? cmb1.getSelectedItem().toString() : "";
        String valorFiltro = cmb2.getSelectedItem() != null ? cmb2.getSelectedItem().toString() : "";

        String sql = "SELECT grupo, especialidad, horario, turno FROM dbo.grupos WHERE activo = 1";

        // Agregar condiciones para filtrar según las selecciones de los ComboBox
        if (!filtro.isEmpty() && !valorFiltro.isEmpty()) {
            if (filtro.equals("Especialidad")) {
                sql += " AND especialidad = '" + valorFiltro + "'";
            } else if (filtro.equals("Turno")) {
                sql += " AND turno = '" + valorFiltro + "'";
            } else if (filtro.equals("Horario")) {
                sql += " AND horario = '" + valorFiltro + "'";
            }
        }

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                String grupo = rs.getString("grupo");
                String especialidad = rs.getString("especialidad");
                String horario = rs.getString("horario");
                String turno = rs.getString("turno");

                modelo.addRow(new Object[]{grupo, especialidad, horario, turno});
            }
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al cargar grupos activos, contacte al administrador");
        }
    }

    private void limpiarCampos() {
        txtGrupo.setText("");
        txtEspecialidad.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registrar_Grupos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registrar_Grupos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registrar_Grupos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registrar_Grupos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registrar_Grupos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backBtn;
    private javax.swing.JLabel backTxt;
    private javax.swing.JButton btnAdminGrupos;
    private javax.swing.JComboBox<String> cmb1;
    private javax.swing.JComboBox<String> cmb2;
    private javax.swing.JPanel exitBtn;
    private javax.swing.JLabel exitTxt;
    private javax.swing.JPanel header;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPanel minimizeBtn2;
    private javax.swing.JLabel minimizeTxt2;
    private javax.swing.JPopupMenu popBorrar;
    private javax.swing.JMenuItem popEliminar;
    private javax.swing.JTable tabla_registro_grupos;
    private javax.swing.JTextField txtEspecialidad;
    private javax.swing.JTextField txtGrupo;
    // End of variables declaration//GEN-END:variables

    Conectar con = new Conectar();
    Connection cn = con.conexion();
}
