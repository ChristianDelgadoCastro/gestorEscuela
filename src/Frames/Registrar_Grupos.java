/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Clases.Conectar;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Christian Delgado
 */
public class Registrar_Grupos extends javax.swing.JFrame {

    /**
     * Creates new form Registrar_curso
     */
    public Registrar_Grupos() {
        initComponents();

        TextPrompt nombre_curso = new TextPrompt("Escribe curso", txtNombre);

        this.setLocationRelativeTo(null);
        mostrarTabla("");
        limpiar();
        txtNumControlGrupo.setEnabled(true);
        cerrar();
        txtIDGrupo.setEnabled(false);

        cargarAsignaturas();
    }

    void limpiar() {

        txtNumControlGrupo.setText("");
        txtNombre.setText("");

    }

    private void cargarAsignaturas() {
        try {
            DefaultComboBoxModel<String> modeloCombo = new DefaultComboBoxModel<>();

            // Agregar el elemento "Seleccione una asignatura" al modelo del JComboBox
            modeloCombo.addElement("Seleccione una asignatura");

            // Establecer conexión a la base de datos
            Conectar con = new Conectar();
            Connection conn = con.conexion();

            // Consultar las asignaturas
            String query = "SELECT nombreAsignatura FROM asignaturas";
            PreparedStatement ps = conn.prepareStatement(query);
            ResultSet rs = ps.executeQuery();

            // Agregar los nombres de las asignaturas al modelo del JComboBox
            while (rs.next()) {
                String nombreAsignatura = rs.getString("nombreAsignatura");
                modeloCombo.addElement(nombreAsignatura);
            }

            // Cerrar la conexión y liberar recursos
            rs.close();
            ps.close();
            conn.close();

            // Establecer el modelo del JComboBox
            cmbAsignaturas.setModel(modeloCombo);

            // Establecer el primer elemento seleccionado por defecto
            cmbAsignaturas.setSelectedIndex(0);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    void mostrarTabla(String valor) {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID Grupo");
        modelo.addColumn("NControl");
        modelo.addColumn("Nombre");
        modelo.addColumn("NControl Asignatura");

        tabla_registro_grupos.setModel(modelo);

        String sql = "SELECT * FROM grupo";

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                String idGrupo = rs.getString("idGrupo");
                String numControlGrupo = rs.getString("numControlGrupo");
                String nombreGrupo = rs.getString("nombreGrupo");
                String numControlAsignatura = rs.getString("numControlAsignatura");

                modelo.addRow(new Object[]{idGrupo, numControlGrupo, nombreGrupo, numControlAsignatura});
            }
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al cargar grupos, contacte al administrador");
        }

        // Desactivar la edición de todas las celdas de la tabla
        for (int column = 0; column < tabla_registro_grupos.getColumnCount(); column++) {
            Class<?> columnClass = tabla_registro_grupos.getColumnClass(column);
            tabla_registro_grupos.setDefaultEditor(columnClass, null);
        }
    }

    public void cerrar() {

        try {
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {

                public void windowClosing(WindowEvent e) {

                    confirmarSalida();

                }

            });

        } catch (Exception e) {
        }
    }

    public void confirmarSalida() {

        int valor = JOptionPane.showConfirmDialog(this, "¿Deseas cerrar la aplicacion?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (valor == JOptionPane.YES_OPTION) {

            JOptionPane.showMessageDialog(null, "Hasta pronto", "", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popBorrar = new javax.swing.JPopupMenu();
        popEliminar = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNumControlGrupo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtIDGrupo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cmbAsignaturas = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_registro_grupos = new javax.swing.JTable();
        btnElimiarGrupo = new javax.swing.JButton();
        btnAdminGrupos = new javax.swing.JButton();

        popEliminar.setText("Borrar");
        popEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popEliminarActionPerformed(evt);
            }
        });
        popBorrar.add(popEliminar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel1.setText("Control de las grupos");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cursos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 0, 14))); // NOI18N

        jLabel2.setText("Número de control de grupo");

        txtNumControlGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumControlGrupoActionPerformed(evt);
            }
        });

        jLabel4.setText("Id del grupo");

        txtIDGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDGrupoActionPerformed(evt);
            }
        });

        jLabel5.setText("Asignatura:");

        cmbAsignaturas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbAsignaturas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAsignaturasActionPerformed(evt);
            }
        });

        jLabel3.setText("Nombre:");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtNumControlGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(cmbAsignaturas, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtIDGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(txtIDGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumControlGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbAsignaturas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/save_icon.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/refresh_icon.png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/back_icon.png"))); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        tabla_registro_grupos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla_registro_grupos.setComponentPopupMenu(popBorrar);
        tabla_registro_grupos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_registro_gruposMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_registro_grupos);

        btnElimiarGrupo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/refresh_icon.png"))); // NOI18N
        btnElimiarGrupo.setText("Eliminar");
        btnElimiarGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElimiarGrupoActionPerformed(evt);
            }
        });

        btnAdminGrupos.setText("Administrar grupo!");
        btnAdminGrupos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminGruposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGuardar)
                            .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnElimiarGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnActualizar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(296, 296, 296)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(btnAdminGrupos, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGuardar)
                            .addComponent(btnActualizar))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnVolver)
                            .addComponent(btnElimiarGrupo))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(btnAdminGrupos, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtNumControlGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumControlGrupoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumControlGrupoActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed

        Principal principal = new Principal();
        principal.setVisible(true);
        dispose();

    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String asignaturaSeleccionada = cmbAsignaturas.getSelectedItem().toString();
        if (asignaturaSeleccionada.equals("Seleccione una asignatura")) {
            AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
            JOptionPane.showMessageDialog(null, "Por favor, seleccione una asignatura válida", "Asignatura no seleccionada", JOptionPane.WARNING_MESSAGE);
            return; // Salir sin guardar
        }

        // Verificar si hay campos vacíos
        String numControlGrupo = txtNumControlGrupo.getText().trim();
        String nombreGrupo = txtNombre.getText().trim();

        if (numControlGrupo.isEmpty() || nombreGrupo.isEmpty()) {
            AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
            JOptionPane.showMessageDialog(null, "No se pueden dejar campos vacíos", "Campos vacíos", JOptionPane.WARNING_MESSAGE);
            return; // Salir sin guardar
        }

        try {
            // Verificar si ya existe un grupo con el mismo número de control
            PreparedStatement psVerificar = cn.prepareStatement("SELECT * FROM grupo WHERE numControlGrupo = ?");
            psVerificar.setInt(1, Integer.parseInt(numControlGrupo));
            ResultSet rsVerificar = psVerificar.executeQuery();

            if (rsVerificar.next()) {
                // Ya existe un grupo con el mismo número de control
                AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
                int opcion = JOptionPane.showConfirmDialog(null, "Ya existe un grupo con el mismo número de control. ¿Desea continuar? \n No se recomienda, podría causar conflictos con las tablas", "Grupo duplicado", JOptionPane.YES_NO_OPTION);
                if (opcion == JOptionPane.NO_OPTION) {
                    return; // Salir sin guardar
                }
            }

            // Continuar con la inserción
            PreparedStatement ps = cn.prepareStatement("INSERT INTO grupo (numControlGrupo, nombreGrupo, numControlAsignatura) VALUES (?, ?, ?)");
            ps.setInt(1, Integer.parseInt(numControlGrupo));
            ps.setString(2, nombreGrupo);

            // Obtener el número de control de la asignatura seleccionada en el JComboBox
            String numControlAsignatura = obtenerNumControlAsignaturaSeleccionada();
            ps.setString(3, numControlAsignatura);

            ps.executeUpdate();
            AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
            JOptionPane.showMessageDialog(null, "Grupo agregado con éxito");
            limpiar();
            mostrarTabla("");
        } catch (SQLException e) {
            System.err.println(e);
            AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
            JOptionPane.showMessageDialog(null, "Problema al guardar el curso... contacte al administrador");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private String obtenerNumControlAsignaturaSeleccionada() {
        String asignaturaSeleccionada = cmbAsignaturas.getSelectedItem().toString();

        try {
            // Establecer conexión a la base de datos
            Conectar con = new Conectar();
            Connection conn = con.conexion();

            // Realizar la consulta para obtener el número de control de la asignatura seleccionada
            String query = "SELECT numControlAsignatura FROM asignaturas WHERE nombreAsignatura = ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, asignaturaSeleccionada);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                // Obtener el número de control de la asignatura
                String numControlAsignatura = rs.getString("numControlAsignatura");
                return numControlAsignatura;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return ""; // Si no se pudo obtener el número de control, devolver cadena vacía
    }

    private void quitarAsignatura() {
        try {
            // Obtener el ID del grupo
            int idGrupo = Integer.parseInt(txtIDGrupo.getText());

            // Actualizar el campo numControlAsignatura del grupo a NULL o a un valor vacío según tus necesidades
            PreparedStatement ps = cn.prepareStatement("UPDATE grupo SET numControlAsignatura = NULL WHERE idGrupo = ?");
            ps.setInt(1, idGrupo);

            int respuesta = ps.executeUpdate();

            if (respuesta > 0) {
                AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
                JOptionPane.showMessageDialog(null, "Asignatura eliminada del grupo");

                // Actualizar la fila correspondiente en la tabla
                int fila = tabla_registro_grupos.getSelectedRow();
                tabla_registro_grupos.setValueAt("Sin asignatura", fila, 3); // Actualizar el valor en la columna numControlAsignatura

            } else {
                AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
                JOptionPane.showMessageDialog(null, "No se pudo eliminar la asignatura del grupo");
            }
        } catch (SQLException e) {
            System.err.println(e);
            AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
            JOptionPane.showMessageDialog(null, "Error al quitar la asignatura del grupo... Contacte al administrador");
        }
    }


    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // Verificar si se ha seleccionado una fila
        if (txtIDGrupo.getText().isEmpty()) {
            AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila. \n"
                    + "Asegurate de que el campo idGrupo tenga un valor", "Fila no seleccionada", JOptionPane.WARNING_MESSAGE);
            return; // Salir sin actualizar
        }

        try {
            // Verificar si ya existe un grupo con el mismo número de control (excepto el grupo actual)
            PreparedStatement psVerificar = cn.prepareStatement("SELECT * FROM grupo WHERE numControlGrupo = ? AND idGrupo <> ?");
            psVerificar.setInt(1, Integer.parseInt(txtNumControlGrupo.getText()));
            psVerificar.setInt(2, Integer.parseInt(txtIDGrupo.getText()));
            ResultSet rsVerificar = psVerificar.executeQuery();

            if (rsVerificar.next()) {
                // Ya existe un grupo con el mismo número de control
                AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
                int opcion = JOptionPane.showConfirmDialog(null, "Ya existe un grupo con el mismo número de control. ¿Desea continuar?", "Grupo duplicado", JOptionPane.YES_NO_OPTION);
                if (opcion == JOptionPane.NO_OPTION) {
                    return; // Salir sin actualizar
                }
            }

            // Obtener el número de control de la asignatura seleccionada en el JComboBox
            String numControlAsignatura = obtenerNumControlAsignaturaSeleccionada();

            if (numControlAsignatura.isEmpty() || numControlAsignatura.equals("Seleccione una asignatura")) {
                AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
                int opcion = JOptionPane.showOptionDialog(null, "Debe seleccionar una asignatura válida.", "Error de asignatura", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE, null, new Object[]{"Quitar asignatura", "OK"}, null);
                if (opcion == 0) {
                    quitarAsignatura();
                }
                return;
            }

            // Continuar con la actualización
            PreparedStatement ps = cn.prepareStatement("UPDATE grupo SET nombreGrupo = ?, numControlGrupo = ?, numControlAsignatura = ? WHERE idGrupo = ?");
            ps.setString(1, txtNombre.getText());
            ps.setInt(2, Integer.parseInt(txtNumControlGrupo.getText()));
            ps.setString(3, numControlAsignatura);
            ps.setInt(4, Integer.parseInt(txtIDGrupo.getText()));

            int respuesta = ps.executeUpdate();

            if (respuesta > 0) {
                AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
                JOptionPane.showMessageDialog(null, "Grupo actualizado");
                limpiar();
                mostrarTabla("");
            } else {
                AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
                JOptionPane.showMessageDialog(null, "No ha seleccionado fila");
            }
        } catch (SQLException e) {
            System.err.println(e);
            AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
            JOptionPane.showMessageDialog(null, "Error al actualizar grupo... Contacte al administrador");
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private String obtenerNumControlAsignatura(String nombreAsignatura) {
        try {
            // Establecer conexión a la base de datos
            Conectar con = new Conectar();
            Connection conn = con.conexion();

            // Realizar la consulta para obtener el número de control de la asignatura
            String query = "SELECT numControlAsignatura FROM asignaturas WHERE nombreAsignatura = ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, nombreAsignatura);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                // Obtener el número de control de la asignatura
                String numControlAsignatura = rs.getString("numControlAsignatura");
                return numControlAsignatura;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return ""; // Si no se pudo obtener el número de control, devolver cadena vacía
    }

    private void seleccionarAsignaturaEnComboBox(String numControlAsignatura) {
        for (int i = 0; i < cmbAsignaturas.getItemCount(); i++) {
            String asignatura = cmbAsignaturas.getItemAt(i).toString();
            if (obtenerNumControlAsignatura(asignatura).equals(numControlAsignatura)) {
                cmbAsignaturas.setSelectedIndex(i);
                break;
            }
        }
    }

    private String obtenerNumControlAsignaturaEnFilaSeleccionada() {
        int fila = tabla_registro_grupos.getSelectedRow();
        if (fila != -1) {
            Object numControlAsignatura = tabla_registro_grupos.getValueAt(fila, 3);
            if (numControlAsignatura != null) {
                return numControlAsignatura.toString();
            }
        }
        return "";
    }


    private void tabla_registro_gruposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_registro_gruposMouseClicked

        int fila = tabla_registro_grupos.getSelectedRow();

        txtIDGrupo.setText(tabla_registro_grupos.getValueAt(fila, 0).toString());
        txtNumControlGrupo.setText(tabla_registro_grupos.getValueAt(fila, 1).toString());
        txtNombre.setText(tabla_registro_grupos.getValueAt(fila, 2).toString());

        String numControlAsignatura = obtenerNumControlAsignaturaEnFilaSeleccionada();
        seleccionarAsignaturaEnComboBox(numControlAsignatura);
    }//GEN-LAST:event_tabla_registro_gruposMouseClicked

    private void popEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popEliminarActionPerformed

        try {

            PreparedStatement ps = cn.prepareStatement("DELETE FROM asignaturas WHERE numControlAsignatura = '" + txtNumControlGrupo.getText() + "'");
            int respuesta = ps.executeUpdate();
            if (respuesta > 0) {
                AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
                JOptionPane.showMessageDialog(null, "Asignatura eliminado");
                limpiar();
                mostrarTabla("");
            } else {
                AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
                JOptionPane.showMessageDialog(null, "No ha seleccionado fila");
            }

        } catch (SQLException e) {
            System.err.println(e);
            AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
            JOptionPane.showMessageDialog(null, "Error al eliminar, contacte al administador");
        }

    }//GEN-LAST:event_popEliminarActionPerformed

    private boolean verificarAlumnosGrupo(int numControlGrupo) {
        boolean tieneAlumnos = false;

        try {
            String sql = "SELECT * FROM alumnos_grupo WHERE numControlGrupo = ?";
            PreparedStatement statement = cn.prepareStatement(sql);
            statement.setInt(1, numControlGrupo);
            ResultSet rs = statement.executeQuery();
            if (rs.next()) {
                tieneAlumnos = true;
            }
            statement.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return tieneAlumnos;
    }

    private void btnElimiarGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElimiarGrupoActionPerformed
        try {
            AdministracionGrupos.SoundPlayer.playSystemNotificationSound();

            // Verificar si se ha seleccionado una fila de la tabla
            int filaSeleccionada = tabla_registro_grupos.getSelectedRow();
            if (filaSeleccionada == -1) {
                JOptionPane.showMessageDialog(null, "No ha seleccionado fila");
                return; // Salir del método sin realizar la eliminación
            }

            // Obtener el número de control del grupo a eliminar
            int numControlGrupo = Integer.parseInt(txtNumControlGrupo.getText());

            // Verificar si el grupo tiene alumnos registrados
            boolean tieneAlumnos = verificarAlumnosGrupo(numControlGrupo);

            if (tieneAlumnos) {
                JOptionPane.showMessageDialog(null, "Este grupo aún tiene información. Para eliminarlo, asegúrese de eliminar su contenido.\n"
                        + "Haga clic en Administrar y elimine todos los valores asignados. Una vez hecho, se podrá eliminar el grupo.");
                return; // Salir del método sin realizar la eliminación
            }

            int confirmacion = JOptionPane.showOptionDialog(
                    null,
                    "¿Estás seguro de eliminar el grupo con número de control " + txtNumControlGrupo.getText() + " y nombre " + txtNombre.getText() + "?",
                    "Confirmación de eliminación",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    new Object[]{"Sí", "No"},
                    null
            );
            if (confirmacion == JOptionPane.YES_OPTION) {
                PreparedStatement ps = cn.prepareStatement("DELETE FROM grupo WHERE numControlGrupo = ?");
                ps.setInt(1, numControlGrupo);
                int respuesta = ps.executeUpdate();
                if (respuesta > 0) {
                    AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
                    JOptionPane.showMessageDialog(null, "Grupo eliminado");
                    limpiar();
                    mostrarTabla("");
                } else {
                    AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
                    JOptionPane.showMessageDialog(null, "No ha seleccionado fila");
                }
            }
        } catch (SQLException e) {
            System.err.println(e);
            AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
            JOptionPane.showMessageDialog(null, "Error al eliminar, contacte al administrador");
        }
    }//GEN-LAST:event_btnElimiarGrupoActionPerformed

    private void txtIDGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDGrupoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDGrupoActionPerformed

    private void btnAdminGruposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminGruposActionPerformed

        int filaSeleccionada = tabla_registro_grupos.getSelectedRow();
        if (filaSeleccionada == -1) {
            AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ningún grupo. Por favor, seleccione uno.");
        } else {
            String numControlGrupo = (String) tabla_registro_grupos.getValueAt(filaSeleccionada, 1);
            String nombreGrupo = (String) tabla_registro_grupos.getValueAt(filaSeleccionada, 2);
            String numControlAsignatura = (String) tabla_registro_grupos.getValueAt(filaSeleccionada, 3);

            Object asignaturaSeleccionada = cmbAsignaturas.getSelectedItem();
            if (asignaturaSeleccionada != null) {
                numControlAsignatura = obtenerNumControlAsignatura(asignaturaSeleccionada.toString());
                AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
                JOptionPane.showMessageDialog(null, "Grupo seleccionado: " + nombreGrupo + " " + numControlGrupo);
                //JOptionPane.showMessageDialog(null, "Grupo seleccionado: " + numControlGrupo + " Nombre de grupo " + nombreGrupo + " Asignatura " + numControlAsignatura);

                // Aquí puedes realizar la redirección al JFrame "AdministracionGrupos"
                int idGrupo = Integer.parseInt(txtIDGrupo.getText());
                AdministracionGrupos administracionGrupos = new AdministracionGrupos(nombreGrupo, numControlGrupo, idGrupo, numControlAsignatura);
                administracionGrupos.setVisible(true);
                dispose();
            } else {
                AdministracionGrupos.SoundPlayer.playSystemNotificationSound();
                JOptionPane.showMessageDialog(null, "No se ha seleccionado una asignatura válida.");
            }
        }

    }//GEN-LAST:event_btnAdminGruposActionPerformed

    private void cmbAsignaturasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAsignaturasActionPerformed

    }//GEN-LAST:event_cmbAsignaturasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registrar_Grupos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registrar_Grupos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registrar_Grupos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registrar_Grupos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registrar_Grupos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAdminGrupos;
    private javax.swing.JButton btnElimiarGrupo;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cmbAsignaturas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu popBorrar;
    private javax.swing.JMenuItem popEliminar;
    private javax.swing.JTable tabla_registro_grupos;
    private javax.swing.JTextField txtIDGrupo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumControlGrupo;
    // End of variables declaration//GEN-END:variables

    Conectar con = new Conectar();
    Connection cn = con.conexion();
}
