/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Clases.Conectar;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import org.apache.tools.ant.taskdefs.Length;

/**
 *
 * @author Christian Delgado
 */
public class Registrar_Asignatura extends javax.swing.JFrame {

    /**
     * Creates new form Registrar_curso
     */
    public Registrar_Asignatura() {
        initComponents();

        TextPrompt nombre_curso = new TextPrompt("Escribe asignatura", txtAsignatura);

        this.setLocationRelativeTo(null);
        mostrarTabla();
        limpiar();
        cerrar();

    }

    void limpiar() {

        txtnControlAsignatura.setText("");
        txtAsignatura.setText("");

    }

    void mostrarTabla() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Numero de asignatura");
        modelo.addColumn("Nombre");

        tabla_registro_asignaturas.setModel(modelo);

        String sql = "SELECT * FROM dbo.asignaturas";

        String datos[] = new String[2];

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);

                modelo.addRow(datos);
            }

            tabla_registro_asignaturas.setModel(modelo);

            // Desactivar la edición de todas las celdas de la tabla
//            DefaultCellEditor editor = new DefaultCellEditor(new JTextField());
//            tabla_registro_asignaturas.setDefaultEditor(Object.class, editor);
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al cargar cursos, contacte al administrador");
        }
    }

    public void cerrar() {

        try {
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {

                public void windowClosing(WindowEvent e) {

                    confirmarSalida();

                }

            });

        } catch (Exception e) {
        }
    }

    public void confirmarSalida() {

        int valor = JOptionPane.showConfirmDialog(this, "¿Deseas cerrar la aplicacion?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (valor == JOptionPane.YES_OPTION) {

            JOptionPane.showMessageDialog(null, "Hasta pronto", "", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popBorrar = new javax.swing.JPopupMenu();
        popEliminar = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtAsignatura = new javax.swing.JTextField();
        txtnControlAsignatura = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_registro_asignaturas = new javax.swing.JTable();
        btnElimiarAsignatura = new javax.swing.JButton();

        popEliminar.setText("Borrar");
        popEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popEliminarActionPerformed(evt);
            }
        });
        popBorrar.add(popEliminar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Control de las asignaturas");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cursos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 0, 14))); // NOI18N

        jLabel2.setText("Número de control de asignatura");

        jLabel3.setText("Nombre de la asignatura:");

        txtAsignatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAsignaturaActionPerformed(evt);
            }
        });

        txtnControlAsignatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnControlAsignaturaActionPerformed(evt);
            }
        });
        txtnControlAsignatura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnControlAsignaturaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtnControlAsignatura, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtAsignatura)))
                .addGap(0, 14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtnControlAsignatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAsignatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/save_icon.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/refresh_icon.png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/back_icon.png"))); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        tabla_registro_asignaturas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla_registro_asignaturas.setComponentPopupMenu(popBorrar);
        tabla_registro_asignaturas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_registro_asignaturasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_registro_asignaturas);

        btnElimiarAsignatura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/refresh_icon.png"))); // NOI18N
        btnElimiarAsignatura.setText("Eliminar");
        btnElimiarAsignatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElimiarAsignaturaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGuardar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnElimiarAsignatura, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnActualizar)
                            .addComponent(btnGuardar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnElimiarAsignatura)
                            .addComponent(btnVolver))
                        .addGap(34, 34, 34))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAsignaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAsignaturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAsignaturaActionPerformed

    private void txtnControlAsignaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnControlAsignaturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnControlAsignaturaActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed

        Principal principal = new Principal();
        principal.setVisible(true);
        dispose();

    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String asignatura = txtAsignatura.getText();

        // Validar que el campo no esté vacío
        if (asignatura.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor, complete todos los campos antes de guardar.");
            return;
        }

        String nControlAsignatura = txtnControlAsignatura.getText();

        // Validar que el campo nControlAsignatura tenga exactamente 5 caracteres
        if (nControlAsignatura.length() != 5) {
            JOptionPane.showMessageDialog(null, "El campo nControlAsignatura debe tener 5 caracteres.");
            return;
        }

        // Guardar los datos en la base de datos
        String sql = "INSERT INTO dbo.asignaturas (nControlAsignatura, asignatura) VALUES (?, ?)";
        try {
            PreparedStatement pst = cn.prepareStatement(sql);
            pst.setString(1, nControlAsignatura);
            pst.setString(2, asignatura);

            int resultado = pst.executeUpdate();
            if (resultado > 0) {
                JOptionPane.showMessageDialog(null, "Asignatura guardada exitosamente.");
                limpiar();
                mostrarTabla();
            } else {
                JOptionPane.showMessageDialog(null, "Error al guardar la asignatura. Contacta al administrador.");
            }
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al guardar la asignatura. Contacta al administrador.");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        int filaSeleccionada = tabla_registro_asignaturas.getSelectedRow();

        // Verificar si se seleccionó una fila
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione una asignatura antes de continuar.");
            return;
        }

        // Obtener los valores actuales de la asignatura seleccionada
        String nControlAsignaturaActual = tabla_registro_asignaturas.getValueAt(filaSeleccionada, 0).toString();
        String asignaturaActual = tabla_registro_asignaturas.getValueAt(filaSeleccionada, 1).toString();

        // Obtener los nuevos valores de asignatura desde los campos de texto
        String nuevaAsignatura = txtAsignatura.getText();
        String nuevoNControlAsignatura = txtnControlAsignatura.getText();

        // Validar que los campos no estén vacíos
        if (nuevaAsignatura.isEmpty() || nuevoNControlAsignatura.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor, complete todos los campos antes de guardar.");
            return;
        }

        // Realizar la actualización de la asignatura en la base de datos
        String sql = "UPDATE dbo.asignaturas SET nControlAsignatura = ?, asignatura = ? WHERE nControlAsignatura = ?";
        try {
            PreparedStatement pst = cn.prepareStatement(sql);
            pst.setString(1, nuevoNControlAsignatura);
            pst.setString(2, nuevaAsignatura);
            pst.setString(3, nControlAsignaturaActual);

            int resultado = pst.executeUpdate();
            if (resultado > 0) {
                JOptionPane.showMessageDialog(null, "Asignatura actualizada exitosamente.");
                mostrarTabla();
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al actualizar la asignatura. Contacta al administrador.");
            }
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al actualizar la asignatura. Contacta al administrador.");
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void tabla_registro_asignaturasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_registro_asignaturasMouseClicked

        int fila = this.tabla_registro_asignaturas.getSelectedRow();

        this.txtnControlAsignatura.setText(this.tabla_registro_asignaturas.getValueAt(fila, 0).toString());
        this.txtAsignatura.setText(this.tabla_registro_asignaturas.getValueAt(fila, 1).toString());
    }//GEN-LAST:event_tabla_registro_asignaturasMouseClicked

    private void popEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popEliminarActionPerformed

    }//GEN-LAST:event_popEliminarActionPerformed


    private void btnElimiarAsignaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElimiarAsignaturaActionPerformed
        int filaSeleccionada = tabla_registro_asignaturas.getSelectedRow();

        // Verificar si se seleccionó una fila
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione una asignatura antes de continuar.");
            return;
        }

        // Obtener el número de control de la asignatura seleccionada
        String nControlAsignatura = tabla_registro_asignaturas.getValueAt(filaSeleccionada, 0).toString();

        // Confirmar la eliminación con un mensaje de confirmación
        int opcion = JOptionPane.showConfirmDialog(null, "¿Estás seguro de que quieres eliminar esta asignatura?",
                "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
        if (opcion == JOptionPane.YES_OPTION) {
            // Realizar la eliminación de la asignatura en la base de datos
            String sql = "DELETE FROM dbo.asignaturas WHERE nControlAsignatura = ?";
            try {
                PreparedStatement pst = cn.prepareStatement(sql);
                pst.setString(1, nControlAsignatura);

                int resultado = pst.executeUpdate();
                if (resultado > 0) {
                    JOptionPane.showMessageDialog(null, "Asignatura eliminada exitosamente.");
                    mostrarTabla();
                    limpiar();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al eliminar la asignatura. Contacta al administrador.");
                }
            } catch (SQLException e) {
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Error al eliminar la asignatura. Contacta al administrador.");
            }
        }
    }//GEN-LAST:event_btnElimiarAsignaturaActionPerformed

    private void txtnControlAsignaturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnControlAsignaturaKeyTyped
        if(txtnControlAsignatura.getText().length() >= 5)
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtnControlAsignaturaKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registrar_Asignatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registrar_Asignatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registrar_Asignatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registrar_Asignatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registrar_Asignatura().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnElimiarAsignatura;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu popBorrar;
    private javax.swing.JMenuItem popEliminar;
    private javax.swing.JTable tabla_registro_asignaturas;
    private javax.swing.JTextField txtAsignatura;
    private javax.swing.JTextField txtnControlAsignatura;
    // End of variables declaration//GEN-END:variables

    Conectar con = new Conectar();
    Connection cn = con.conexion();
}
