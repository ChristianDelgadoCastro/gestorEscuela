package Frames;

import Clases.Conectar;
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;

import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
//.*;

/**
 *
 * @author Christian Delgado
 */
public class AdministracionAsignatura extends javax.swing.JFrame {

    private String campogrupo;
    private String campoespecialidad;
    private String camponControlAsignatura;
    /**
     * Creates new form AdministracionGrupos
     */
    int xMouse, yMouse;

    public AdministracionAsignatura(String grupo, String especialidad, String nControlAsignaturaP) {
        this.campogrupo = grupo;
        this.campoespecialidad = especialidad;
        this.camponControlAsignatura = nControlAsignaturaP;

        initComponents();
        this.setLocationRelativeTo(null);

        txtGrupo.setText(grupo);
        txtEspecialidad.setText(especialidad);
        txtnControlAsignatura.setText(nControlAsignaturaP);

        insertarAlumnos();
        cargarAlumnosEnTabla(grupo, nControlAsignaturaP);

        cerrar();
    }

    //Constructor
    private AdministracionAsignatura() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAlumnosGrupoIngles = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtnControlAsignatura = new javax.swing.JLabel();
        txtGrupo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        header = new javax.swing.JPanel();
        backBtn = new javax.swing.JPanel();
        backTxt = new javax.swing.JLabel();
        exitBtn = new javax.swing.JPanel();
        exitTxt = new javax.swing.JLabel();
        minimizeBtn4 = new javax.swing.JPanel();
        minimizeTxt4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtEspecialidad = new javax.swing.JLabel();
        btnCambiarCalificaciones = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaAlumnosGrupoIngles.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        tablaAlumnosGrupoIngles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        tablaAlumnosGrupoIngles.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        tablaAlumnosGrupoIngles.setGridColor(new java.awt.Color(0, 0, 0));
        tablaAlumnosGrupoIngles.setOpaque(false);
        tablaAlumnosGrupoIngles.setSelectionBackground(new java.awt.Color(232, 57, 95));
        tablaAlumnosGrupoIngles.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tablaAlumnosGrupoIngles.setShowVerticalLines(true);
        tablaAlumnosGrupoIngles.getTableHeader().setResizingAllowed(false);
        tablaAlumnosGrupoIngles.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaAlumnosGrupoIngles);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 117, 770, 500));

        jLabel1.setFont(new java.awt.Font("Roboto Medium", 1, 18)); // NOI18N
        jLabel1.setText("Grupo Inglés:");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 50, -1, -1));

        txtnControlAsignatura.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        txtnControlAsignatura.setText("jLabel4");
        jPanel4.add(txtnControlAsignatura, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 50, 160, -1));

        txtGrupo.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        txtGrupo.setText("jLabel2");
        jPanel4.add(txtGrupo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, -1, -1));

        jLabel4.setFont(new java.awt.Font("Roboto Medium", 1, 18)); // NOI18N
        jLabel4.setText("Grupo:");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        header.setBackground(new java.awt.Color(255, 255, 255));
        header.setForeground(new java.awt.Color(255, 255, 255));
        header.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headerMouseDragged(evt);
            }
        });
        header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                headerMousePressed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(255, 255, 255));

        backTxt.setBackground(new java.awt.Color(255, 255, 255));
        backTxt.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        backTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backTxt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/backbtn.png"))); // NOI18N
        backTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backTxt.setPreferredSize(new java.awt.Dimension(40, 40));
        backTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout backBtnLayout = new javax.swing.GroupLayout(backBtn);
        backBtn.setLayout(backBtnLayout);
        backBtnLayout.setHorizontalGroup(
            backBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        backBtnLayout.setVerticalGroup(
            backBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backBtnLayout.createSequentialGroup()
                .addComponent(backTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        exitBtn.setBackground(new java.awt.Color(255, 255, 255));

        exitTxt.setBackground(new java.awt.Color(255, 255, 255));
        exitTxt.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        exitTxt.setForeground(new java.awt.Color(0, 0, 0));
        exitTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitTxt.setText("X");
        exitTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitTxt.setPreferredSize(new java.awt.Dimension(40, 40));
        exitTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout exitBtnLayout = new javax.swing.GroupLayout(exitBtn);
        exitBtn.setLayout(exitBtnLayout);
        exitBtnLayout.setHorizontalGroup(
            exitBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exitTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        exitBtnLayout.setVerticalGroup(
            exitBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, exitBtnLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(exitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        minimizeBtn4.setBackground(new java.awt.Color(255, 255, 255));
        minimizeBtn4.setPreferredSize(new java.awt.Dimension(40, 30));

        minimizeTxt4.setFont(new java.awt.Font("Roboto Black", 0, 18)); // NOI18N
        minimizeTxt4.setForeground(new java.awt.Color(0, 0, 0));
        minimizeTxt4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimizeTxt4.setText("—");
        minimizeTxt4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeTxt4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeTxt4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeTxt4MouseExited(evt);
            }
        });

        javax.swing.GroupLayout minimizeBtn4Layout = new javax.swing.GroupLayout(minimizeBtn4);
        minimizeBtn4.setLayout(minimizeBtn4Layout);
        minimizeBtn4Layout.setHorizontalGroup(
            minimizeBtn4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(minimizeBtn4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(minimizeTxt4, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
        );
        minimizeBtn4Layout.setVerticalGroup(
            minimizeBtn4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(minimizeBtn4Layout.createSequentialGroup()
                .addComponent(minimizeTxt4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(minimizeBtn4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(exitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(minimizeBtn4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 30));

        jLabel2.setFont(new java.awt.Font("Roboto Medium", 1, 18)); // NOI18N
        jLabel2.setText("Especialidad:");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, -1, -1));

        txtEspecialidad.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        txtEspecialidad.setText("jLabel4");
        jPanel4.add(txtEspecialidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, 160, -1));

        btnCambiarCalificaciones.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        btnCambiarCalificaciones.setText("Cambiar calificaciones");
        btnCambiarCalificaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiarCalificacionesActionPerformed(evt);
            }
        });
        jPanel4.add(btnCambiarCalificaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, 190, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public class CalificacionesTableModel extends DefaultTableModel {

        @Override
        public boolean isCellEditable(int row, int column) {
            // Permitir editar las celdas de las columnas de calificaciones
            return column >= 2 && column <= 4;
        }

        @Override
        public void setValueAt(Object aValue, int row, int column) {
            super.setValueAt(aValue, row, column);

            if (column >= 2 && column <= 6) {
                // Calcular el promedio y actualizar la columna "Promedio"
                calcularPromedio(row);
                // Actualizar el valor en la base de datos
                actualizarCalificacionEnDB(row, column);
            }
        }

        private void calcularPromedio(int row) {
            // Obtener las calificaciones de las columnas relevantes
            Object practicasObj = getValueAt(row, 2);
            Object examenObj = getValueAt(row, 3);
            Object vidaEscolarObj = getValueAt(row, 4);

            // Convertir los valores a números (maneja excepciones si es necesario)
            float practicas = (practicasObj != null) ? Float.parseFloat(practicasObj.toString()) : 0.0f;
            float examen = (examenObj != null) ? Float.parseFloat(examenObj.toString()) : 0.0f;
            float vidaEscolar = (vidaEscolarObj != null) ? Float.parseFloat(vidaEscolarObj.toString()) : 0.0f;

            // Aplicar los porcentajes y calcular el promedio ponderado
            float promedio = (((practicas * 0.3f) + (examen * 0.7f)) * 0.8f) + (vidaEscolar * 0.2f);

            // Actualizar el valor del promedio en la columna "Promedio"
            setValueAt(promedio, row, 5);
        }

        private void actualizarCalificacionEnDB(int row, int column) {
            // Aquí colocar el código para actualizar la calificación en la base de datos
            // Puedes obtener el nControl y el grupo desde las etiquetas txtGrupo y txtnControlIngles
            String nControl = txtGrupo.getText();
            String grupo = txtnControlAsignatura.getText();

            // Obtener el nombre de la columna (speaking, reading, listening, writing, use_of_english)
            String columnName = getColumnName(column);

            // Obtener el valor de la calificación
            Object calificacion = getValueAt(row, column);
        }
    }

    void cargarAlumnosEnTabla(String grupo, String nControlAsignatura) {
        grupo = txtGrupo.getText();
        nControlAsignatura = txtnControlAsignatura.getText();

        // Creamos una instancia del TableModel personalizado
        CalificacionesTableModel modelo = new CalificacionesTableModel();
        modelo.addColumn("nControl");
        modelo.addColumn("Nombre");
        modelo.addColumn("Practicas");
        modelo.addColumn("Examen");
        modelo.addColumn("Vida Escolar");
        modelo.addColumn("Promedio");

        tablaAlumnosGrupoIngles.setModel(modelo);

        String sql = "SELECT ca.ncontrol, a.nombre, ca.practicas, ca.examen, ca.vidaEscolar, ca.promedioAsignatura "
                + "FROM calificaciones_asignatura ca "
                + "INNER JOIN alumnos a ON ca.ncontrol = a.ncontrol "
                + "WHERE ca.grupo = ? AND ca.nControlAsignatura = ?";

        try {
            PreparedStatement statement = cn.prepareStatement(sql);
            statement.setString(1, grupo);
            statement.setString(2, nControlAsignatura);
            ResultSet rs = statement.executeQuery();

            while (rs.next()) {
                String nControl = rs.getString("ncontrol");
                String nombre = rs.getString("nombre");
                Float practicas = rs.getFloat("practicas");
                Float examen = rs.getFloat("examen");
                Float vidaEscolar = rs.getFloat("vidaEscolar");
                Float promedioAsignatura = rs.getFloat("promedioAsignatura");

                modelo.addRow(new Object[]{nControl, nombre, practicas, examen, vidaEscolar, promedioAsignatura});
            }
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al cargar datos de alumnos, contacte al administrador" + e);
        }

        // Ajustar automáticamente el tamaño de las columnas según el contenido
        tablaAlumnosGrupoIngles.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tablaAlumnosGrupoIngles.getColumnModel().getColumn(0).setPreferredWidth(100);
        tablaAlumnosGrupoIngles.getColumnModel().getColumn(1).setPreferredWidth(250);
        tablaAlumnosGrupoIngles.getColumnModel().getColumn(2).setPreferredWidth(80);
        tablaAlumnosGrupoIngles.getColumnModel().getColumn(3).setPreferredWidth(80);
        tablaAlumnosGrupoIngles.getColumnModel().getColumn(4).setPreferredWidth(80);
        tablaAlumnosGrupoIngles.getColumnModel().getColumn(5).setPreferredWidth(100);
    }

    private void insertarAlumnos() {
        // Obtener el grupo y el nControl de inglés de los labels
        String grupo = txtGrupo.getText();
        String nControlAsignatura = txtnControlAsignatura.getText();

        // Realizar una consulta en la tabla calificaciones para obtener los alumnos que coinciden con el grupo y el nControl de inglés
        List<String> nControlAlumnos = new ArrayList<>();
        String sql = "SELECT DISTINCT ncontrol FROM dbo.calificaciones WHERE grupo = ? AND nControlAsignatura = ?";
        try {
            PreparedStatement pst = cn.prepareStatement(sql);
            pst.setString(1, grupo);
            pst.setString(2, nControlAsignatura);
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                String nControl = rs.getString("ncontrol");
                nControlAlumnos.add(nControl);
            }
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al obtener los nControl de los alumnos. Contacta al administrador.");
            return;
        }

        // Insertar los registros en la tabla calificaciones_ingles si no existen
        int registrosInsertados = 0;
        String insertSql = "INSERT INTO dbo.calificaciones_asignatura (ncontrol, grupo, ncontrolasignatura, practicas, examen, vidaEscolar, promedioAsignatura) VALUES (?, ?, ?, NULL, NULL, NULL, NULL)";
        try {
            PreparedStatement insertPst = cn.prepareStatement(insertSql);

            for (String nControl : nControlAlumnos) {
                // Verificar si el registro ya existe en la tabla calificaciones_ingles
                boolean registroExistente = verificarRegistroExistenteEnCalificacionesIngles(grupo, nControlAsignatura, nControl);

                if (!registroExistente) {
                    insertPst.setString(1, nControl);
                    insertPst.setString(2, grupo);
                    insertPst.setString(3, nControlAsignatura);

                    int resultado = insertPst.executeUpdate();
                    if (resultado > 0) {
                        registrosInsertados++;
                    } else {
                        JOptionPane.showMessageDialog(null, "Error al insertar el registro en la tabla calificaciones_ingles. Contacta al administrador.");
                    }
                }
            }
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al insertar el registro en la tabla calificaciones_ingles. Contacta al administrador.");
        }

        if (registrosInsertados > 0) {
            JOptionPane.showMessageDialog(null, "Se han insertado " + registrosInsertados + " registros en la tabla calificaciones_asignatura exitosamente.");
        }

        // Actualizar la tabla de calificaciones_ingles con los registros insertados
        cargarAlumnosEnTabla(grupo, nControlAsignatura);
    }

    private boolean verificarRegistroExistenteEnCalificacionesIngles(String grupo, String nControlIngles, String nControlAlumno) {
        String sql = "SELECT COUNT(*) FROM dbo.calificaciones_asignatura "
                + "WHERE grupo = ? AND ncontrolasignatura = ? AND ncontrol = ?";
        try {
            PreparedStatement pst = cn.prepareStatement(sql);
            pst.setString(1, grupo);
            pst.setString(2, nControlIngles);
            pst.setString(3, nControlAlumno);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                int count = rs.getInt(1);
                return count > 0;
            }
        } catch (SQLException e) {
            System.err.println(e);
        }
        return false;
    }

    private void backTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backTxtMouseClicked
        AdministracionGrupos adminGrupos = new AdministracionGrupos(campogrupo, campoespecialidad);
        adminGrupos.setVisible(true);
        dispose();
    }//GEN-LAST:event_backTxtMouseClicked

    private void backTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backTxtMouseEntered
        backBtn.setBackground(Color.CYAN);
        backBtn.setForeground(Color.white);
    }//GEN-LAST:event_backTxtMouseEntered

    private void backTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backTxtMouseExited
        backBtn.setBackground(Color.white);
        backBtn.setForeground(Color.black);
    }//GEN-LAST:event_backTxtMouseExited

    private void exitTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTxtMouseClicked
        int option = JOptionPane.showConfirmDialog(null, "¿Estás seguro de cerrar el sistema?", "Confirmar salida", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitTxtMouseClicked

    private void exitTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTxtMouseEntered
        exitBtn.setBackground(Color.red);
        exitTxt.setForeground(Color.white);
    }//GEN-LAST:event_exitTxtMouseEntered

    private void exitTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTxtMouseExited
        exitBtn.setBackground(Color.white);
        exitTxt.setForeground(Color.black);
    }//GEN-LAST:event_exitTxtMouseExited

    private void headerMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_headerMouseDragged

    private void headerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_headerMousePressed

    private void minimizeTxt4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeTxt4MouseClicked
        setState(Login.ICONIFIED);
    }//GEN-LAST:event_minimizeTxt4MouseClicked

    private void minimizeTxt4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeTxt4MouseEntered
        minimizeBtn4.setBackground(Color.GRAY);
        minimizeTxt4.setForeground(Color.white);
    }//GEN-LAST:event_minimizeTxt4MouseEntered

    private void minimizeTxt4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeTxt4MouseExited
        minimizeBtn4.setBackground(Color.white);
        minimizeTxt4.setForeground(Color.black);
    }//GEN-LAST:event_minimizeTxt4MouseExited


    private void btnCambiarCalificacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiarCalificacionesActionPerformed
        String sql = "UPDATE calificaciones_asignatura "
                + "SET practicas = ?, examen = ?, vidaEscolar = ?, promedioAsignatura = ? "
                + "WHERE ncontrol = ? AND grupo = ? AND ncontrolasignatura = ?";

        try {
            PreparedStatement pst = cn.prepareStatement(sql);

            for (int row = 0; row < tablaAlumnosGrupoIngles.getRowCount(); row++) {
                String nControl = tablaAlumnosGrupoIngles.getValueAt(row, 0).toString();
                Float practicas = Float.parseFloat(tablaAlumnosGrupoIngles.getValueAt(row, 2).toString());
                Float examen = Float.parseFloat(tablaAlumnosGrupoIngles.getValueAt(row, 3).toString());
                Float vidaEscolar = Float.parseFloat(tablaAlumnosGrupoIngles.getValueAt(row, 4).toString());
                Float promedioAsignaturas = (float) (((((double) practicas * 0.3) + ((double) examen * 0.7)) * 0.8) + ((double) vidaEscolar * 0.2));
                promedioAsignaturas = redondear(promedioAsignaturas, 2); // Redondear el promedio a 2 decimales

                pst.setFloat(1, practicas);
                pst.setFloat(2, examen);
                pst.setFloat(3, vidaEscolar);
                pst.setFloat(4, promedioAsignaturas);
                pst.setString(5, nControl);
                pst.setString(6, txtGrupo.getText());
                pst.setString(7, txtnControlAsignatura.getText());

                pst.executeUpdate();
            }

            JOptionPane.showMessageDialog(null, "Calificaciones guardadas exitosamente.");
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al guardar calificaciones. Contacte al administrador.");
        }
    }

    private float redondear(float valor, int decimales) {
        float factor = (float) Math.pow(10, decimales);
        return Math.round(valor * factor) / factor;
    }//GEN-LAST:event_btnCambiarCalificacionesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdministracionAsignatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdministracionAsignatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdministracionAsignatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdministracionAsignatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdministracionAsignatura().setVisible(true);
            }
        });
    }

    public void cerrarConexion(Connection conn) {
        if (conn != null) {
            try {
                // Cerrar la conexión
                conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    public void cerrar() {

        try {
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {

                public void windowClosing(WindowEvent e) {

                    confirmarSalida();

                }

            });

        } catch (Exception e) {
        }
    }

    public void confirmarSalida() {
        int valor = JOptionPane.showConfirmDialog(this, "¿Deseas cerrar la aplicacion?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (valor == JOptionPane.YES_OPTION) {

            JOptionPane.showMessageDialog(null, "Hasta pronto", "", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);

        }

    }

    Conectar con = new Conectar();
    Connection cn = con.conexion();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backBtn;
    private javax.swing.JLabel backTxt;
    private javax.swing.JButton btnCambiarCalificaciones;
    private javax.swing.JPanel exitBtn;
    private javax.swing.JLabel exitTxt;
    private javax.swing.JPanel header;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel minimizeBtn4;
    private javax.swing.JLabel minimizeTxt4;
    private javax.swing.JTable tablaAlumnosGrupoIngles;
    private javax.swing.JLabel txtEspecialidad;
    private javax.swing.JLabel txtGrupo;
    private javax.swing.JLabel txtnControlAsignatura;
    // End of variables declaration//GEN-END:variables
}
